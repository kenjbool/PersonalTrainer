@using PersonalTrainer.Models
@model PersonalTrainer.Models.FitnessTest
@ViewBag.Title


<html>
<head>
    <title>Paul Fawcett PT</title>

    <style>
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }

        th, td {
            padding: 5px;
        }
    </style>
</head>

<body>
    <div class="main-content">
        <h2>FitnessTest</h2>
    </div>

    @using (Html.BeginForm())
    {
        <h2>Workout</h2>

        {
            int counter = 1;
            foreach (var workoutName in Model.WorkoutNameList)
            {

                <div class="leftfield">@Html.Label("Workout Name:") @Html.Label(workoutName)</div><div class="leftfield">
                    @Html.LabelFor(x => x.WeightLifted)
                <input id="weightLifted{" value ="@Model.WeightLifted" data-bind="value: weightLifted, valueUpdate:'afterkeydown'" />
            </div>

                <div class="rightfield">
                    @Html.LabelFor(x => x.ORM)
                <span id="orm" data-bind="text: orm, valueUpdate:'afterkeydown'"></span>
                <input type="hidden" value="@Model.ORM" data-bind="value: ormValue, valueUpdate:'afterkeydown'" />
            </div>

                <div class="leftfield">
                    @Html.LabelFor(x => x.Reps) <input id="reps" data-bind="value: reps, valueUpdate:'afterkeydown'" />
                </div>
            
                <div class="rightfield">@Html.LabelFor(x => x.Comments) @Html.TextAreaFor(x => x.Comments)</div>
                <div class="clear-fix"></div>

                counter++;
            }
        }

        <h3>Aerobic</h3>

        {
            foreach (var cardioName in Model.CardioNameList)
            {
                <div class="leftfield">@Html.Label("Exercise Name:")@Html.Label(cardioName)</div>
                    <div class="leftfield">@Html.LabelFor(x => x.ExerciseName) @Html.TextBoxFor(x => x.ExerciseName)</div>

                    <div class="rightfield">@Html.Label("Time:")@Html.TextBoxFor(x => x.Time)</div>
                    <div class="rightfield">@Html.LabelFor(x => x.Comments) @Html.TextAreaFor(x => x.Comments)</div>
                    <div class="clear-fix"></div>
            }
        }
    }
    <input type="submit" value="Make the plan!" />
</body>
</html>

@section scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.0/knockout-min.js"></script>
    <script>
        function recalculateResult(weightLifted1, reps1) {
            return weightLifted + reps;
        }

        var viewModel = function() {
            var self = this;
            self.ormValue1 = ko.observable();
            self.weightLifted = ko.observable();
            self.reps = ko.observable();
            self.orm = ko.computed(function() {
                    var returnNumber = 0;
                    var returnNumberMax = Number(self.weightLifted() * (1 + (self.reps() / 30)));
                    returnNumber = returnNumberMax * 0.93;
                    if (isNaN(returnNumber)) {
                        returnNumber = 0;
                    }
                    self.ormValue = returnNumber;
                    console.debug(self.ormValue);
                    return returnNumber;
                },
                self);
        };

        ko.applyBindings(new viewModel());
    </script>
}