@model PersonalTrainer.Models.LoginModel

@{
    ViewBag.Title = "Log in";
    var modelState = new ModelState();
}
<head>
    <h2 class="text-center">@ViewBag.Title</h2>
</head>

<div class="container">
    <row class="col-sm-6">
        @if(modelState.Errors != null)
        {<div class="container" id="validation-alert">
            <div class="alert alert-danger">
                <strong>Warning!</strong> Please check validation on fields.
            </div>
        </div>
        }
        @using (Html.BeginForm(new {ReturnUrl = ViewBag.ReturnUrl}))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <form role="form">
                <div class="form-group">
                    <label for="@Html.LabelFor(m => m.FullName)">@Html.LabelFor(m => m.FullName)</label>
                    <input type="text" class="form-control" id="@Html.TextBoxFor(m => m.FullName)"/>
                    @Html.ValidationMessageFor(m => m.FullName)
                </div>
                <div class="form-group">
                    <label for="@Html.LabelFor(m => m.Password)">@Html.LabelFor(m => m.Password)</label>
                    <input type="text" class="form-control" id="@Html.TextBoxFor(m => m.Password)"/>
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="checkbox">
                    <label><input type="checkbox">Remember me</label>
                </div>

                <button type="submit" class="btn btn-default">Log In</button>
            </form>
        }
        <br/>

        <p>if you don't have an account.</p>
        <a href="@Url.Action("Register", "Account")" class="btn btn-default">
            Register
        </a>

    </row>
</div>
<row class="col-sm-6">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</row>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
